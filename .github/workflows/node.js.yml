# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    paths: 
      - 'web-app/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths: 
      - 'web-app/**'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    
    - name: Production Build
      run: |
        cd web-app/
        yarn install
        yarn build
        GZIP=-9 tar -zcf web-app-prod.tar.gz dist/

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: web-app-prod.tar.gz
        path: web-app/web-app-prod.tar.gz
        
  test:
    needs: [build]
    runs-on: ubuntu-latest       

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    
    - name: Run Tests
      run: |
        cd web-app/
        yarn install
        yarn test
        
    - name: Coverage
      run: |
        cd web-app/
        yarn install
        yarn coverage

    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v1.1.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: web-app/coverage/lcov.info
        base-path: web-app
        flag-name: react-frontend-unit-test-${{ matrix.node-version }}
        parallel: true
        
  coverage: 
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v1.1.1
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true

  deploy: 
    needs: [test]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
    - uses: actions/checkout@v2
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    
    - name: Production Build
      run: |
        cd web-app/
        yarn install
        yarn build
        GZIP=-9 tar -zcf web-app-prod.tar.gz dist/

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: web-app-prod.tar.gz
        path: web-app/web-app-prod.tar.gz
